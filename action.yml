name: "Go Frontend Audit Script Action"
description: "Runs a go script to audit a given repository"

inputs:
  token:
    description: "GitHub token to add commits to pull request."
    required: true

runs:
  using: composite
  steps:
    - name: Run Go Audit Scrip
      # uses: docker://yonatanrojas/frontendauditscript:latest
      uses: ./.github/actions/go-audit-script/action.yml

    - name: Post PR Comment
      uses: actions/github-script@v6
      with:
        github-token: ${{ inputs.token }}
        script: |
          const uniqueIdentifier = "<!-- quality-report-comment -->";

          const REACT_VERSION_EVAL_NAME = process.env.REACT_VERSION_EVAL_NAME
          const REACT_VERSION_SCORE = process.env.REACT_VERSION_SCORE
          const REACT_VERSION_MAX_SCORE = process.env.REACT_VERSION_MAX_SCORE
          const REACT_VERSION_MIN_SCORE = process.env.REACT_VERSION_MIN_SCORE
          const REACT_VERSION_WEIGHT = process.env.REACT_VERSION_WEIGHT

          const ICON_LIBS_EVAL_NAME = process.env.ICON_LIBS_EVAL_NAME
          const ICON_LIBS_SCORE = process.env.ICON_LIBS_SCORE
          const ICON_LIBS_MAX_SCORE = process.env.ICON_LIBS_MAX_SCORE
          const ICON_LIBS_MIN_SCORE = process.env.ICON_LIBS_MIN_SCORE
          const ICON_LIBS_WEIGHT = process.env.ICON_LIBS_WEIGHT

          const MUI_EXTRA_LIBS_EVAL_NAME = process.env.MUI_EXTRA_LIBS_EVAL_NAME
          const MUI_EXTRA_LIBS_SCORE = process.env.MUI_EXTRA_LIBS_SCORE
          const MUI_EXTRA_LIBS_MAX_SCORE = process.env.MUI_EXTRA_LIBS_MAX_SCORE
          const MUI_EXTRA_LIBS_MIN_SCORE = process.env.MUI_EXTRA_LIBS_MIN_SCORE
          const MUI_EXTRA_LIBS_WEIGHT = process.env.MUI_EXTRA_LIBS_WEIGHT

          const STYLING_LIBS_EVAL_NAME = process.env.STYLING_LIBS_EVAL_NAME
          const STYLING_LIBS_SCORE = process.env.STYLING_LIBS_SCORE
          const STYLING_LIBS_MAX_SCORE = process.env.STYLING_LIBS_MAX_SCORE
          const STYLING_LIBS_MIN_SCORE = process.env.STYLING_LIBS_MIN_SCORE
          const STYLING_LIBS_WEIGHT = process.env.STYLING_LIBS_WEIGHT

          const THEME_PROVIDERS_EVAL_NAME = process.env.THEME_PROVIDERS_EVAL_NAME
          const THEME_PROVIDERS_SCORE = process.env.THEME_PROVIDERS_SCORE
          const THEME_PROVIDERS_MAX_SCORE = process.env.THEME_PROVIDERS_MAX_SCORE
          const THEME_PROVIDERS_MIN_SCORE = process.env.THEME_PROVIDERS_MIN_SCORE
          const THEME_PROVIDERS_WEIGHT = process.env.THEME_PROVIDERS_WEIGHT

          const WEB_FONTS_EVAL_NAME = process.env.WEB_FONTS_EVAL_NAME
          const WEB_FONTS_SCORE = process.env.WEB_FONTS_SCORE
          const WEB_FONTS_MAX_SCORE = process.env.WEB_FONTS_MAX_SCORE
          const WEB_FONTS_MIN_SCORE = process.env.WEB_FONTS_MIN_SCORE
          const WEB_FONTS_WEIGHT = process.env.WEB_FONTS_WEIGHT

          const ASSETS_EVAL_NAME = process.env.ASSETS_EVAL_NAME
          const ASSETS_SCORE = process.env.ASSETS_SCORE
          const ASSETS_MAX_SCORE = process.env.ASSETS_MAX_SCORE
          const ASSETS_MIN_SCORE = process.env.ASSETS_MIN_SCORE
          const ASSETS_WEIGHT = process.env.ASSETS_WEIGHT

          const EVALUATION_TOTAL_SCORE = process.env.EVALUATION_TOTAL_SCORE

          const table = `
            | Evaluation Name üß™           | Min / Max Score üìà                                          | Score üíØ                           | Weight ‚öñÔ∏è                 |
            |------------------------------|-------------------------------------------------------------|------------------------------------|---------------------------|
            | ${REACT_VERSION_EVAL_NAME}   | ${REACT_VERSION_MIN_SCORE} / ${REACT_VERSION_MAX_SCORE}     | ${REACT_VERSION_SCORE}             | ${REACT_VERSION_WEIGHT}   |
            | ${ICON_LIBS_EVAL_NAME}       | ${ICON_LIBS_MIN_SCORE} / ${ICON_LIBS_MAX_SCORE}             | ${ICON_LIBS_SCORE}                 | ${ICON_LIBS_WEIGHT}       |
            | ${MUI_EXTRA_LIBS_EVAL_NAME}  | ${MUI_EXTRA_LIBS_MIN_SCORE} / ${MUI_EXTRA_LIBS_MAX_SCORE}   | ${MUI_EXTRA_LIBS_SCORE}            | ${MUI_EXTRA_LIBS_WEIGHT}  |
            | ${STYLING_LIBS_EVAL_NAME}    | ${STYLING_LIBS_MIN_SCORE} / ${STYLING_LIBS_MAX_SCORE}       | ${STYLING_LIBS_SCORE}              | ${STYLING_LIBS_WEIGHT}    |
            | ${THEME_PROVIDERS_EVAL_NAME} | ${THEME_PROVIDERS_MIN_SCORE} / ${THEME_PROVIDERS_MAX_SCORE} | ${THEME_PROVIDERS_SCORE}           | ${THEME_PROVIDERS_WEIGHT} |
            | ${WEB_FONTS_EVAL_NAME}       | ${WEB_FONTS_MIN_SCORE} / ${WEB_FONTS_MAX_SCORE}             | ${WEB_FONTS_SCORE}                 | ${WEB_FONTS_WEIGHT}       |
            | ${ASSETS_EVAL_NAME}          | ${ASSETS_MIN_SCORE} / ${ASSETS_MAX_SCORE}                   | ${ASSETS_SCORE}                    | ${ASSETS_WEIGHT}          |
            |                              |                                                             |                                    |                           |
            | ‚≠ê**Total Score**             |                                                             | **${EVALUATION_TOTAL_SCORE} / 10** |                           |

            If you want to know more about how this score is calculated to the actions documentation [here](https://github.com/yonydev/frontend-audit-script).

            ${uniqueIdentifier} <!-- Hidden identifier -->
          `;

          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number
          });

          const existingComment = comments.find(comment => comment.body.includes(uniqueIdentifier));

          if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: table
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: table
              });
            }
